name: workflow release
on: [workflow_dispatch]
jobs:

  build_py_manylinux2014:
    name: build python ${{ matrix.python-version }} manylinux2014
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux2014_x86_64
    strategy:
      matrix:
        python-version: [cp38-cp38, cp39-cp39]
      fail-fast: false
    steps:
    - name: info
      run: /opt/python/${{ matrix.python-version }}/bin/python --version
    - name: checkout
      uses: actions/checkout@v2
    - name: update submodules
      run: git submodule update --init
    - name: build python manylinux
      run: /opt/python/${{ matrix.python-version }}/bin/python setup.py bdist_wheel
    - name: audit python wheel
      run: auditwheel repair dist/*.whl
    - name: list files
      run: ls -R
    - name: artifact name
      id: artifactname
      run: echo "::set-output name=file::$(ls dist/*.whl| head -1)
    - name: artifacts
      uses: actions/upload-artifact@v2
      with:
        path: wheelhouse/*.whl
        name: ${{ steps.artifactname.outputs.file }}

  pack_py:
    name: pack python
    needs: [build_py_all_bdist, build_py_manylinux2014, build_py_sdist]
    runs-on: ubuntu-latest
    steps:
      - name: download python artifacts dist
        uses: elonh/download-artifact-regexp@master
        with:
          pattern: .*py.*
          path: dist
      - name: Display structure of downloaded files
        run: ls -R
      - name: unzip files
        run: |
          mkdir output
          find dist -type f -print0 | xargs -0 mv -t output
          cd output
          ls
      - name: artifacts
        uses: actions/upload-artifact@v2
        with:
          path: output
          name: rhino3dm.py all wheels

  # build_dotnet_ios:
  #   name: build dotnet ios
  #   runs-on: macos-11
  #   steps:
  #     - name: setup cmake
  #       uses: jwlawson/actions-setup-cmake@v1.9
  #       with:
  #         cmake-version: '3.21.1'
  #     - name: setup xcode
  #       uses: maxim-lobanov/setup-xcode@v1
  #       with:
  #         xcode-version: '12.5'
  #     - name: info
  #       run: python3 --version && cmake --version
  #     - name: checkout
  #       uses: actions/checkout@v2
  #     - name: update submodules
  #       run: git submodule update --init
  #     #- name: setup-xamarin
  #     #  uses: maxim-lobanov/setup-xamarin@v1
  #     #  with:
  #     #    mono-version: '6.12'
  #     #    xamarin-ios-version: '14.14.2.5'
  #     - name: bootstrap
  #       run: python3 script/bootstrap.py -p ios
  #     - name: setup
  #       run: python3 script/setup.py -p ios -v
  #     - name: build dotnet ios
  #       run: python3 script/build.py -p ios -v
  #     - name: pack dotnet ios
  #       run: nuget pack src/dotnet/Rhino3dm.iOS.nuspec
  #     - name: artifacts nupkg
  #       uses: actions/upload-artifact@v2
  #       with:
  #         path: Rhino3dm.iOS.*.nupkg #src/build/ios/dotnet/Rhino3dm.iOS.dll
  #         name: rhino3dm.net ios nupkg
  #     - name: artifacts
  #       uses: actions/upload-artifact@v2
  #       with:
  #         path: src/build/ios/dotnet/Rhino3dm.iOS.dll
  #         name: rhino3dm.net ios

  # build_dotnet_android:
  #   name: build dotnet android
  #   runs-on: macos-11
  #   steps:
  #     - name: set up python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: 3.7.1
  #     - name: setup cmake
  #       uses: jwlawson/actions-setup-cmake@v1.9
  #       with:
  #         cmake-version: '3.21.1'
  #     - name: setup xcode
  #       uses: maxim-lobanov/setup-xcode@v1
  #       with:
  #         xcode-version: '12.5'
  #     - name: setup-xamarin
  #       uses: maxim-lobanov/setup-xamarin@v1
  #       with:
  #         mono-version: '6.12' # specify version in '<major>.<minor>' format
  #         xamarin-android-version: '11.3.0.4' # specify full version; it is not recomended option because your pipeline can be broken suddenly in future
  #     - name: setup android ndk
  #       uses: maxim-lobanov/setup-android-tools@v1
  #       with:
  #         packages: ndk;21.0.6113669
  #         cache: true
  #     - name: info
  #       run: python3 --version && cmake --version
  #     - name: checkout
  #       uses: actions/checkout@v2
  #     - name: update submodules
  #       run: git submodule update --init
  #     - name: bootstrap
  #       run: python3 script/bootstrap.py -p android
  #     - name: setup
  #       run: python3 script/setup.py -p android -v
  #     - name: build dotnet android
  #       run: python3 script/build.py -p android -v
  #     - name: pack dotnet android
  #       run: nuget pack src/dotnet/Rhino3dm.Android.nuspec
  #     - name: artifacts nupkg
  #       uses: actions/upload-artifact@v2
  #       with:
  #         path: Rhino3dm.Android.*.nupkg #src/build/android/dotnet/Rhino3dm.Android.dll
  #         name: rhino3dm.net android nupkg
  #     - name: artifacts
  #       uses: actions/upload-artifact@v2
  #       with:
  #         path: src/build/android/dotnet/Rhino3dm.Android.dll
  #         name: rhino3dm.net android

  build_js:
    name: build rhino3dm.js
    runs-on: ubuntu-latest
    container:
      image: emscripten/emsdk:2.0.10
    steps:
      - name: info
        run: python3 --version && emcc --version && cmake --version
      - name: checkout
        uses: actions/checkout@v2
      - name: update submodules
        run: git submodule update --init
      - name: bootstrap
        run: python3 script/bootstrap.py -p js
      - name: setup
        run: python3 script/setup.py -p js -v
      - name: build js
        run: python3 script/build.py -p js -v
      - name: artifacts
        uses: actions/upload-artifact@v2
        with:
          path: src/build/javascript/artifacts_js
          name: rhino3dm.js