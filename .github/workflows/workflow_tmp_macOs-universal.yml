name: workflow temp macOS universal
on: [workflow_dispatch]
jobs:
  build_dotnet_os:
    name: build dotnet ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-11]
        include:
          - os: macos-11
            target: macos
            artifact-path: src/build/macos/Release/librhino3dm_native.dylib
      fail-fast: false
    steps:
      #- name: setup dotnet
      #  if: ${{ matrix.target == 'macos'}}
      #  uses: actions/setup-dotnet@v3
      #  with:
      #    dotnet-version: '7.0.x'
      - name: find identity
        run: |
          security find-identity -v
      - name: setup cmake
        uses: jwlawson/actions-setup-cmake@v1.13.1
        with:
          cmake-version: '3.21.1'
      - name: set up python
        uses: actions/setup-python@v4.5.0
        with:
          python-version: 3.7.x
      - name: info
        run: python --version && cmake --version && dotnet --version && git --version
      - name: checkout
        uses: actions/checkout@v3.3.0
      - name: update submodules
        run: ls && git submodule update --init
      - name: bootstrap dotnet ${{ matrix.target }}
        run: python script/bootstrap.py -p ${{ matrix.target }}
      - name: setup dotnet ${{ matrix.target }}
        run: python script/setup.py -p ${{ matrix.target }} -v
      - name: build dotnet ${{ matrix.target }}
        run: python script/build.py -p ${{ matrix.target }} -v
      - name: list
        run: "ls -R src/build/${{ matrix.target }}/Release"
      #- name: Import Code-Signing Certificates
      # uses: Apple-Actions/import-codesign-certs@v1
      #  with:
      #    p12-file-base64: ${{ secrets.MACOS_CERTIFICATE }}
      #    p12-password: ${{ secrets.MACOS_CERTIFICATE_PWD }}
      - name: code-sign native libraries
        env:
          IDENTITY_ID: ${{ secrets.IDENTITY_ID }}
          MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
          MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
          MACOS_KEYCHAIN_TEMP_PWD: ${{ secrets.MACOS_KEYCHAIN_TEMP_PWD }}
        run: |
          if [ "$RUNNER_OS" == "macOS" ]; then
            ./script/codesign-native.sh src/build/macos/Release
          else
            echo "$RUNNER_OS not supported for code-signing"
            exit 0
          fi
        shell: bash
      - name: notarize native library
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          MACDEV_PW: ${{ secrets.MACDEV_PW }}
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "macOS" ]; then
            ./script/notarize-native.sh src/build/macos/Release/librhino3dm_native.dylib
          else
            echo "$RUNNER_OS not supported for notarizing"
            exit 0
          fi

      - name: artifacts
        uses: actions/upload-artifact@v3.1.2
        with:
          path: ${{ matrix.artifact-path }}
          name: rhino3dm.net ${{ matrix.target }}