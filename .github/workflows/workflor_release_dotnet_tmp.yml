name: workflow release dotnet tmp
on: [workflow_dispatch]
jobs:

  build_dotnet_os:
    name: build dotnet ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-11, windows-2022]
        include:
          - os: ubuntu-latest
            target: linux
            artifact-path: src/build/linux/librhino3dm_native.so
          - os: windows-2022
            target: windows
            artifact-path: src\build\windows\*\Release\librhino3dm_native.dll
          - os: macos-11
            target: macos
            artifact-path: src/build/macos/Release/librhino3dm_native.dylib
      fail-fast: false
    steps:
      - name: setup xcode
        if: ${{ matrix.target == 'macos' }}
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '12.5'
      #- name: setup dotnet
      #  if: ${{ matrix.target == 'macos'}}
      #  uses: actions/setup-dotnet@v3
      #  with:
      #    dotnet-version: '7.0.x'
      - name: setup cmake
        uses: jwlawson/actions-setup-cmake@v1.9
        with:
          cmake-version: '3.21.1'
      - name: set up python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: info
        run: python --version && cmake --version && dotnet --version && git --version
      - name: checkout
        uses: actions/checkout@v2
      - name: update submodules
        run: ls && git submodule update --init
      - name: bootstrap dotnet ${{ matrix.os }}
        run: python script/bootstrap.py -p ${{ matrix.target }}
      - name: setup dotnet ${{ matrix.os }}
        run: python script/setup.py -p ${{ matrix.target }} -v
      - name: build dotnet ${{ matrix.os }}
        run: python script/build.py -p ${{ matrix.target }} -v
      - name: list
        run: "ls -R src/build/${{ matrix.target }}"
      - name: artifacts
        uses: actions/upload-artifact@v2
        with:
          path: ${{ matrix.artifact-path }}
          name: rhino3dm.net ${{ matrix.target }}

  pack_dotnet:
    name: pack dotnet
    needs: build_dotnet_os
    runs-on: windows-2022
    steps:
      - name: set up python
        uses: actions/setup-python@v4.5.0
        with:
          python-version: 3.7.x
      - name: setup cmake
        uses: jwlawson/actions-setup-cmake@v1.13.1
        with:
          cmake-version: '3.21.1'
      - name: checkout
        uses: actions/checkout@v3.3.0
      - name: update submodules
        run: ls && git submodule update --init
      - name: bootstrap dotnet
        run: python script/bootstrap.py -p windows
      - name: setup dotnet
        run: python script/setup.py -p windows -v
      - name: build dotnet
        run: dotnet build src/dotnet/Rhino3dm.csproj
      - name: download rhino3dm.net linux
        uses: actions/download-artifact@v3.0.2
        with:
          name: rhino3dm.net linux
          path: src/build/linux/Release/
      - name: download rhino3dm.net macos
        uses: actions/download-artifact@v3.0.2
        with:
          name: rhino3dm.net macos
          path: src/build/macos/Release/
      - name: download rhino3dm.net windows
        uses: actions/download-artifact@v3.0.2
        with:
          name: rhino3dm.net windows
          path: src/build/windows/
      - name: list
        run: "ls -R src/build/"
      - name: pack dotnet
        run: dotnet pack src/dotnet/Rhino3dm.csproj
      - name: artifacts nupkg
        uses: actions/upload-artifact@v3.1.2
        with:
          path: src/dotnet/bin/Debug/Rhino3dm.*.nupkg #${{ matrix.artifact-path }}
          name: rhino3dm.net nupkg